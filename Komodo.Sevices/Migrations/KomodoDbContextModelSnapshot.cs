// <auto-generated />
using Komodo.Sevices.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Komodo.Sevices.Migrations
{
    [DbContext(typeof(KomodoDbContext))]
    partial class KomodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Komodo.Sevices.DbContext.Commodity", b =>
                {
                    b.Property<int>("CommodityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommodityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommodityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommodityGroupId")
                        .HasColumnType("int");

                    b.HasKey("CommodityId");

                    b.HasIndex("CommodityGroupId");

                    b.ToTable("Commodities");

                    b.HasData(
                        new
                        {
                            CommodityId = 1,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity1",
                            CommodityGroupId = 1
                        },
                        new
                        {
                            CommodityId = 2,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity2",
                            CommodityGroupId = 1
                        },
                        new
                        {
                            CommodityId = 3,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity3",
                            CommodityGroupId = 1
                        },
                        new
                        {
                            CommodityId = 4,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity4",
                            CommodityGroupId = 2
                        },
                        new
                        {
                            CommodityId = 5,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity5",
                            CommodityGroupId = 2
                        },
                        new
                        {
                            CommodityId = 6,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity6",
                            CommodityGroupId = 2
                        },
                        new
                        {
                            CommodityId = 7,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity7",
                            CommodityGroupId = 3
                        },
                        new
                        {
                            CommodityId = 8,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity8",
                            CommodityGroupId = 3
                        },
                        new
                        {
                            CommodityId = 9,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity9",
                            CommodityGroupId = 3
                        },
                        new
                        {
                            CommodityId = 10,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity10",
                            CommodityGroupId = 4
                        },
                        new
                        {
                            CommodityId = 11,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity11",
                            CommodityGroupId = 4
                        },
                        new
                        {
                            CommodityId = 12,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity12",
                            CommodityGroupId = 4
                        },
                        new
                        {
                            CommodityId = 13,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity13",
                            CommodityGroupId = 5
                        },
                        new
                        {
                            CommodityId = 14,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity14",
                            CommodityGroupId = 5
                        },
                        new
                        {
                            CommodityId = 15,
                            CommodityCode = "0001",
                            CommodityDescription = "Commodity15",
                            CommodityGroupId = 5
                        });
                });

            modelBuilder.Entity("Komodo.Sevices.DbContext.CommodityGroup", b =>
                {
                    b.Property<int>("CommodityGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommodityGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommodityGroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommodityGroupId");

                    b.ToTable("CommodityGroups");

                    b.HasData(
                        new
                        {
                            CommodityGroupId = 1,
                            CommodityGroupCode = "0001",
                            CommodityGroupDescription = "CommodityGroup1"
                        },
                        new
                        {
                            CommodityGroupId = 2,
                            CommodityGroupCode = "0002",
                            CommodityGroupDescription = "CommodityGroup2"
                        },
                        new
                        {
                            CommodityGroupId = 3,
                            CommodityGroupCode = "0003",
                            CommodityGroupDescription = "CommodityGroup3"
                        },
                        new
                        {
                            CommodityGroupId = 4,
                            CommodityGroupCode = "0004",
                            CommodityGroupDescription = "CommodityGroup4"
                        },
                        new
                        {
                            CommodityGroupId = 5,
                            CommodityGroupCode = "0005",
                            CommodityGroupDescription = "CommodityGroup5"
                        });
                });

            modelBuilder.Entity("Komodo.Sevices.DbContext.Commodity", b =>
                {
                    b.HasOne("Komodo.Sevices.DbContext.CommodityGroup", null)
                        .WithMany("Commodities")
                        .HasForeignKey("CommodityGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
